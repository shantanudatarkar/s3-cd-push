pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Deploy to All Environments') {
            steps {
                script {
                    // Define environment-specific settings
                    def environments = ['dev', 'uat', 'prod']

                    // Loop through each environment and perform deployment
                    for (def env in environments) {
                        echo "Deploying to ${env} environment"
                        deployToEnvironment(env)
                    }
                }
            }
        }
    }
}

// Define a function to deploy to a specific environment
def deployToEnvironment(environment) {
    def s3BucketName

    switch (environment) {
        case 'dev':
            s3BucketName = "dev-shan-infra"
            break
        case 'uat':
            s3BucketName = "uat-shan-infra"
            break
        case 'prod':
            s3BucketName = "prod-shan-infra"
            break
        default:
            echo "Unsupported environment: ${environment}"
            return
    }

    sh "aws s3 cp index.html s3://${s3BucketName}/index.html"
}
